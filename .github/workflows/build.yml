name: Build

on:
  push:
    branches:
      - main
      - linux
    paths-ignore: [ 'Doc/**', 'Flights/**', 'Html/**', 'Images/**', 'Localdoc/**', 'Scenarios/**', 'Textures/**', 'Textures2/**']
  pull_request:
    branches:
      - main
    paths-ignore: [ 'Doc/**', 'Flights/**', 'Html/**', 'Images/**', 'Localdoc/**', 'Scenarios/**', 'Textures/**', 'Textures2/**']

jobs:
  build-linux-ubuntu:
    name: Build on ubuntu
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - name: Install build dependencies
      run: sudo apt-get -y install libglfw3-dev libfreetype-dev libopenal-dev libfontconfig1-dev libsndfile1-dev libglm-dev

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create directories
      run: |
        mkdir -p ${{ github.workspace }}/out/build
        mkdir ${{ github.workspace }}/out/install
    - name: Configure
      working-directory: ${{ github.workspace }}/out/build
      run: cmake -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/out/install ../..
    - name: Build
      working-directory: ${{ github.workspace }}/out/build
      run: cmake --build . --config RelWithDebInfo
    - name: Install
      working-directory: ${{ github.workspace }}/out/build
      run: cmake --install . --prefix  ${{ github.workspace }}/out/install

  build-linux-ubuntu-gcc-10:
    name: Build on ubuntu with gcc 10
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - name: Install build dependencies
      run: sudo apt-get -y install gcc-10 g++-10 libglfw3-dev libfreetype-dev libopenal-dev libfontconfig1-dev libsndfile1-dev libglm-dev

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create directories
      run: |
        mkdir -p ${{ github.workspace }}/out/build
        mkdir ${{ github.workspace }}/out/install
    - name: Configure
      working-directory: ${{ github.workspace }}/out/build
      run: cmake -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/out/install ../..
      env:
        CC:   gcc-10
        CXX:  g++-10
    - name: Build
      working-directory: ${{ github.workspace }}/out/build
      run: cmake --build . --config RelWithDebInfo
      env:
        CC:   gcc-10
        CXX:  g++-10
    - name: Install
      working-directory: ${{ github.workspace }}/out/build
      run: cmake --install . --prefix  ${{ github.workspace }}/out/install

#  build:
#    name: Build with CMake
#    strategy:
#      fail-fast: false
#      matrix:
#        architecture: [x64, x86]
#      
#    runs-on: windows-2019
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#      
#    - name: Setup Problem Matcher
#      uses: ammaraskar/msvc-problem-matcher@master
#      
#    - name: Setup MSVC Console
#      uses: ilammy/msvc-dev-cmd@v1
#      with:
#        arch: ${{ matrix.architecture }}
#
#    - name: Create directories
#      run: |
#        mkdir out\build
#        mkdir out\install
#      
#    - name: Cache irrKlang package
#      uses: actions/cache@v2
#      with:
#        path: ${{ github.workspace }}/out/build/Extern/irrKlang/${{ matrix.architecture }}
#        key: irrKlang-${{ matrix.architecture }}
#
#    - name: Configure
#      working-directory: ${{ github.workspace }}/out/build
#      run: cmake -G Ninja ../.. -DORBITER_MAKE_DOC=OFF -DIRRKLANG_DIR:STRING="irrKlang_DOWNLOAD"
#
#    - name: Build
#      working-directory: ${{ github.workspace }}/out/build
#      run: cmake --build . --config RelWithDebInfo
#
#    - name: Test
#      working-directory: ${{ github.workspace }}/out/build
#      run: ctest --config RelWithDebInfo .
#
#    - name: Install
#      working-directory: ${{ github.workspace }}/out/build
#      run: cmake --install . --prefix  ${{ github.workspace }}/out/install
#
#    - name: Pack
#      if: ${{ github.ref == 'refs/heads/main' }}
#      working-directory: ${{ github.workspace }}/out/install/Orbiter
#      shell: cmd
#      run: '7z a "${{ github.workspace }}/out/Orbiter.zip" .'
#
#    - name: Upload Build Artifact
#      if: ${{ github.ref == 'refs/heads/main' }}
#      uses: actions/upload-artifact@v2.2.4
#      with:
#        name: Orbiter-${{ matrix.architecture }}
#        # A file, directory or wildcard pattern that describes what to upload
#        path: ${{ github.workspace }}/out/Orbiter.zip
#        retention-days: 60
